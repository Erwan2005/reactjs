{"ast":null,"code":"var _jsxFileName = \"/home/erwan/Documents/Frontend/reactjs/src/components/Profile/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Route, Switch, withRouter, Link } from 'react-router-dom';\nimport { publicRequest, userRequest } from '../../requestMethods';\nimport Info from '../Info';\nimport { useQuery } from \"react-query\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Query(props) {\n  _s();\n\n  return props.children(useQuery(props.keyName, props.fn, props.options));\n}\n\n_s(Query, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\n_c = Query;\nexport class index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCurrent = async () => {\n      let data = await userRequest.get(`userapp/users/${this.props.match.params.id}`).then(({\n        data\n      }) => data);\n      this.setState({\n        profile: data\n      });\n    };\n\n    this.getFriends = async () => {\n      let data = await userRequest.get(`userapp/users/${this.props.match.params.id}`).then(({\n        data\n      }) => data);\n      this.setState({\n        friend: data\n      });\n    };\n\n    this.getFriend = async () => {\n      let data = await userRequest.get('userapp/friend/').then(({\n        data\n      }) => data);\n      this.setState({\n        friends: data\n      });\n    };\n\n    this.checkFriend = (userId, friendId) => {\n      if (this.state.friends.filter(item => item.user == this.props.user.id && item.friend == this.props.match.params.id).length == 0) return false;else return true;\n    };\n\n    this.sendRequest = async () => {\n      await userRequest.post('userapp/friendrequest/', {\n        sender: this.props.user.id,\n        receiver: this.props.match.params.id\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.state = {\n      friends: [],\n      current: {},\n      friend: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getCurrent();\n    this.getFriend();\n    this.getFriends();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profiles\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.friend.img_covert,\n            alt: \"mur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.friend.avatar,\n            alt: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user.currentUser\n});\n\nexport default connect(mapStateToProps, null)(withRouter(index));\n\nvar _c;\n\n$RefreshReg$(_c, \"Query\");","map":{"version":3,"sources":["/home/erwan/Documents/Frontend/reactjs/src/components/Profile/index.jsx"],"names":["React","connect","Route","Switch","withRouter","Link","publicRequest","userRequest","Info","useQuery","Query","props","children","keyName","fn","options","index","Component","constructor","getCurrent","data","get","match","params","id","then","setState","profile","getFriends","friend","getFriend","friends","checkFriend","userId","friendId","state","filter","item","user","length","sendRequest","post","sender","receiver","res","console","log","current","componentDidMount","render","img_covert","avatar","mapStateToProps","currentUser"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAeC,MAAf,EAAsBC,UAAtB,EAAiCC,IAAjC,QAA6C,kBAA7C;AACA,SAASC,aAAT,EAAuBC,WAAvB,QAA0C,sBAA1C;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,aAAP;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,SAAOA,KAAK,CAACC,QAAN,CAAeH,QAAQ,CAACE,KAAK,CAACE,OAAP,EAAgBF,KAAK,CAACG,EAAtB,EAA0BH,KAAK,CAACI,OAAhC,CAAvB,CAAP;AACD;;GAFQL,K;UACeD,Q;;;KADfC,K;AAIT,OAAO,MAAMM,KAAN,SAAoBhB,KAAK,CAACiB,SAA1B,CAAoC;AAC1CC,EAAAA,WAAW,CAACP,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SASlBQ,UATkB,GASL,YAAU;AACtB,UAAIC,IAAI,GAAG,MAAMb,WAAW,CAACc,GAAZ,CAAiB,iBAAgB,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAA5D,EAChBC,IADgB,CACX,CAAC;AAACL,QAAAA;AAAD,OAAD,KAAYA,IADD,CAAjB;AAEA,WAAKM,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEP;AAAV,OAAd;AACA,KAbiB;;AAAA,SAelBQ,UAfkB,GAeL,YAAU;AAEvB,UAAIR,IAAI,GAAG,MAAMb,WAAW,CAACc,GAAZ,CAAiB,iBAAgB,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAA5D,EAA+DC,IAA/D,CAAoE,CAAC;AAACL,QAAAA;AAAD,OAAD,KAAYA,IAAhF,CAAjB;AACA,WAAKM,QAAL,CAAc;AAACG,QAAAA,MAAM,EAAET;AAAT,OAAd;AACC,KAnBiB;;AAAA,SAoBlBU,SApBkB,GAoBN,YAAU;AACrB,UAAIV,IAAI,GAAG,MAAMb,WAAW,CAACc,GAAZ,CAAgB,iBAAhB,EAChBI,IADgB,CACX,CAAC;AAACL,QAAAA;AAAD,OAAD,KAAYA,IADD,CAAjB;AAEA,WAAKM,QAAL,CAAc;AAACK,QAAAA,OAAO,EAAEX;AAAV,OAAd;AACA,KAxBiB;;AAAA,SA0BlBY,WA1BkB,GA0BJ,CAACC,MAAD,EAAQC,QAAR,KAAoB;AAC9B,UAAI,KAAKC,KAAL,CAAWJ,OAAX,CAAmBK,MAAnB,CAA0BC,IAAI,IAAGA,IAAI,CAACC,IAAL,IAAa,KAAK3B,KAAL,CAAW2B,IAAX,CAAgBd,EAA7B,IAAmCa,IAAI,CAACR,MAAL,IAAe,KAAKlB,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3G,EAA+Ge,MAA/G,IAAyH,CAA7H,EACE,OAAO,KAAP,CADF,KAEK,OAAO,IAAP;AACR,KA9BiB;;AAAA,SAgClBC,WAhCkB,GAgCJ,YAAU;AACtB,YAAMjC,WAAW,CAACkC,IAAZ,CAAiB,wBAAjB,EACJ;AAACC,QAAAA,MAAM,EAAC,KAAK/B,KAAL,CAAW2B,IAAX,CAAgBd,EAAxB;AAA2BmB,QAAAA,QAAQ,EAAC,KAAKhC,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC;AAA5D,OADI,EAC8DC,IAD9D,CACmEmB,GAAG,IAAG;AAC5EC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAHI,CAAN;AAIA,KArCgB;;AAEjB,SAAKT,KAAL,GAAW;AACVJ,MAAAA,OAAO,EAAE,EADC;AAERgB,MAAAA,OAAO,EAAE,EAFD;AAGRlB,MAAAA,MAAM,EAAE;AAHA,KAAX;AAKA;;AAgCAmB,EAAAA,iBAAiB,GAAE;AACnB,SAAK7B,UAAL;AACA,SAAKW,SAAL;AACA,SAAKF,UAAL;AACA;;AACDqB,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACC;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACC;AAAK,YAAA,GAAG,EAAE,KAAKd,KAAL,CAAWN,MAAX,CAAkBqB,UAA5B;AAAwC,YAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAK,YAAA,GAAG,EAAE,KAAKf,KAAL,CAAWN,MAAX,CAAkBsB,MAA5B;AAAoC,YAAA,GAAG,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAOC;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAPD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAYA;;AA1DyC;;AA6D3C,MAAMC,eAAe,GAAIjB,KAAD,KAAY;AAClCG,EAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWe;AADiB,CAAZ,CAAxB;;AAGA,eAAepD,OAAO,CAACmD,eAAD,EAAiB,IAAjB,CAAP,CAA8BhD,UAAU,CAACY,KAAD,CAAxC,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from \"react-redux\";\nimport { Route,Switch,withRouter,Link } from 'react-router-dom';\nimport { publicRequest,userRequest } from '../../requestMethods';\nimport Info from '../Info'\nimport { useQuery } from \"react-query\";\nimport './style.css'\n\nfunction Query(props) {\n  return props.children(useQuery(props.keyName, props.fn, props.options));\n}\n\nexport class index extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tfriends: [],\n\t    current: {},\n\t    friend: {},\n\t\t};\n\t}\n\n\tgetCurrent = async() =>{\n\t\tlet data = await userRequest.get(`userapp/users/${this.props.match.params.id}`)\n\t\t.then(({data}) => data)\n\t\tthis.setState({profile: data})\n\t}\n\n\tgetFriends = async() =>{\n\t\t\n\tlet data =\tawait userRequest.get(`userapp/users/${this.props.match.params.id}`).then(({data}) => data)\n\tthis.setState({friend: data})\n\t}\n\tgetFriend = async() =>{\n\t\tlet data = await userRequest.get('userapp/friend/')\n\t\t.then(({data}) => data)\n\t\tthis.setState({friends: data})\n\t}\n\n\tcheckFriend = (userId,friendId) =>{\n\t    if (this.state.friends.filter(item=> item.user == this.props.user.id && item.friend == this.props.match.params.id).length == 0)\n\t      return false\n\t    else return true\n\t};\n\n\tsendRequest = async() =>{\n   await userRequest.post('userapp/friendrequest/',\n    ({sender:this.props.user.id,receiver:this.props.match.params.id})).then(res =>{\n      console.log(res)\n    })\n  };\n\n  componentDidMount(){\n\t\tthis.getCurrent()\n\t\tthis.getFriend()\n\t\tthis.getFriends()\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"profiles\">\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"image\">\n\t\t\t\t\t\t<img src={this.state.friend.img_covert} alt=\"mur\" />\n\t\t\t\t\t\t<img src={this.state.friend.avatar} alt=\"avatar\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user.currentUser,\n});\nexport default connect(mapStateToProps,null)(withRouter(index))"]},"metadata":{},"sourceType":"module"}