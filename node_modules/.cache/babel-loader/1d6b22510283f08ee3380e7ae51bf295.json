{"ast":null,"code":"'use strict';\n\nconst dataURLtoFile = (dataURl, filename) => {\n  var arr = dataURl.split(','),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n\n  return new File([u8arr], filename, {\n    type: mime\n  });\n};\n\nconst getExtension = (filename, isVideo) => {\n  var name = filename.split('.');\n  return {\n    fileName: name[0],\n    extension: isVideo ? 'png' : name[1] || 'png'\n  };\n};\n\nconst createImage = (canvas, filename) => {\n  var image = canvas.toDataURL();\n  var success = image.length > 100000;\n  var file = [];\n  var imageUrl = '';\n\n  if (success) {\n    file = dataURLtoFile(image, filename);\n    imageUrl = URL.createObjectURL(file);\n  }\n\n  return [success, file, image, imageUrl];\n};\n\nfunction createCanvas(page, config) {\n  try {\n    var vp = page.getViewport(1);\n    var canvas = document.createElement('canvas');\n    canvas.width = config.width || '300';\n    canvas.height = config.height || '200';\n    var scale = Math.min(canvas.width / vp.width, canvas.height / vp.height);\n    console.log('sss', scale);\n    return page.render({\n      canvasContext: canvas.getContext('2d'),\n      viewport: page.getViewport(scale)\n    }).promise.then(function () {\n      return canvas;\n    }).catch(err => {\n      console.log(err);\n      return err;\n    });\n  } catch (err) {\n    return err;\n  }\n}\n\nmodule.exports = {\n  dataURLtoFile,\n  getExtension,\n  createImage,\n  createCanvas\n};","map":{"version":3,"sources":["/home/erwan/Documents/Frontend/reactjs/node_modules/react-pdf-thumbnail/lib/createThumbImage.js"],"names":["dataURLtoFile","dataURl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","getExtension","isVideo","name","fileName","extension","createImage","canvas","image","toDataURL","success","file","imageUrl","URL","createObjectURL","createCanvas","page","config","vp","getViewport","document","createElement","width","height","scale","Math","min","console","log","render","canvasContext","getContext","viewport","promise","then","catch","err","module","exports"],"mappings":"AAAA;;AACA,MAAMA,aAAa,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC5C,MAAIC,GAAG,GAAGF,OAAO,CAACG,KAAR,CAAc,GAAd,CAAV;AAAA,MACCC,IAAI,GAAGF,GAAG,CAAC,CAAD,CAAH,CAAOG,KAAP,CAAa,SAAb,EAAwB,CAAxB,CADR;AAAA,MAECC,IAAI,GAAGC,IAAI,CAACL,GAAG,CAAC,CAAD,CAAJ,CAFZ;AAAA,MAGCM,CAAC,GAAGF,IAAI,CAACG,MAHV;AAAA,MAICC,KAAK,GAAG,IAAIC,UAAJ,CAAeH,CAAf,CAJT;;AAMA,SAAOA,CAAC,EAAR,EAAY;AACXE,IAAAA,KAAK,CAACF,CAAD,CAAL,GAAWF,IAAI,CAACM,UAAL,CAAgBJ,CAAhB,CAAX;AACA;;AAED,SAAO,IAAIK,IAAJ,CAAS,CAACH,KAAD,CAAT,EAAkBT,QAAlB,EAA4B;AAAEa,IAAAA,IAAI,EAAEV;AAAR,GAA5B,CAAP;AACA,CAZD;;AAcA,MAAMW,YAAY,GAAG,CAACd,QAAD,EAAWe,OAAX,KAAuB;AAC3C,MAAIC,IAAI,GAAGhB,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAX;AACA,SAAO;AACNe,IAAAA,QAAQ,EAAED,IAAI,CAAC,CAAD,CADR;AAENE,IAAAA,SAAS,EAAEH,OAAO,GAAG,KAAH,GAAWC,IAAI,CAAC,CAAD,CAAJ,IAAW;AAFlC,GAAP;AAIA,CAND;;AAQA,MAAMG,WAAW,GAAG,CAACC,MAAD,EAASpB,QAAT,KAAsB;AACzC,MAAIqB,KAAK,GAAGD,MAAM,CAACE,SAAP,EAAZ;AACA,MAAIC,OAAO,GAAGF,KAAK,CAACb,MAAN,GAAe,MAA7B;AACA,MAAIgB,IAAI,GAAG,EAAX;AACA,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAIF,OAAJ,EAAa;AACZC,IAAAA,IAAI,GAAG1B,aAAa,CAACuB,KAAD,EAAQrB,QAAR,CAApB;AACAyB,IAAAA,QAAQ,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAX;AACA;;AACD,SAAO,CAACD,OAAD,EAAUC,IAAV,EAAgBH,KAAhB,EAAuBI,QAAvB,CAAP;AACA,CAVD;;AAWA,SAASG,YAAT,CAAsBC,IAAtB,EAA4BC,MAA5B,EAAoC;AACnC,MAAI;AACH,QAAIC,EAAE,GAAGF,IAAI,CAACG,WAAL,CAAiB,CAAjB,CAAT;AACA,QAAIZ,MAAM,GAAGa,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAd,IAAAA,MAAM,CAACe,KAAP,GAAeL,MAAM,CAACK,KAAP,IAAgB,KAA/B;AACAf,IAAAA,MAAM,CAACgB,MAAP,GAAgBN,MAAM,CAACM,MAAP,IAAiB,KAAjC;AACA,QAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASnB,MAAM,CAACe,KAAP,GAAeJ,EAAE,CAACI,KAA3B,EAAkCf,MAAM,CAACgB,MAAP,GAAgBL,EAAE,CAACK,MAArD,CAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,KAAnB;AACA,WAAOR,IAAI,CACTa,MADK,CACE;AACPC,MAAAA,aAAa,EAAEvB,MAAM,CAACwB,UAAP,CAAkB,IAAlB,CADR;AAEPC,MAAAA,QAAQ,EAAEhB,IAAI,CAACG,WAAL,CAAiBK,KAAjB;AAFH,KADF,EAKLS,OALK,CAKGC,IALH,CAKQ,YAAY;AACzB,aAAO3B,MAAP;AACA,KAPK,EAQL4B,KARK,CAQEC,GAAD,IAAS;AACfT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACA,aAAOA,GAAP;AACA,KAXK,CAAP;AAYA,GAnBD,CAmBE,OAAOA,GAAP,EAAY;AACb,WAAOA,GAAP;AACA;AACD;;AACDC,MAAM,CAACC,OAAP,GAAiB;AAChBrD,EAAAA,aADgB;AAEhBgB,EAAAA,YAFgB;AAGhBK,EAAAA,WAHgB;AAIhBS,EAAAA;AAJgB,CAAjB","sourcesContent":["'use strict';\nconst dataURLtoFile = (dataURl, filename) => {\n\tvar arr = dataURl.split(','),\n\t\tmime = arr[0].match(/:(.*?);/)[1],\n\t\tbstr = atob(arr[1]),\n\t\tn = bstr.length,\n\t\tu8arr = new Uint8Array(n);\n\n\twhile (n--) {\n\t\tu8arr[n] = bstr.charCodeAt(n);\n\t}\n\n\treturn new File([u8arr], filename, { type: mime });\n};\n\nconst getExtension = (filename, isVideo) => {\n\tvar name = filename.split('.');\n\treturn {\n\t\tfileName: name[0],\n\t\textension: isVideo ? 'png' : name[1] || 'png',\n\t};\n};\n\nconst createImage = (canvas, filename) => {\n\tvar image = canvas.toDataURL();\n\tvar success = image.length > 100000;\n\tvar file = [];\n\tvar imageUrl = '';\n\tif (success) {\n\t\tfile = dataURLtoFile(image, filename);\n\t\timageUrl = URL.createObjectURL(file);\n\t}\n\treturn [success, file, image, imageUrl];\n};\nfunction createCanvas(page, config) {\n\ttry {\n\t\tvar vp = page.getViewport(1);\n\t\tvar canvas = document.createElement('canvas');\n\t\tcanvas.width = config.width || '300';\n\t\tcanvas.height = config.height || '200';\n\t\tvar scale = Math.min(canvas.width / vp.width, canvas.height / vp.height);\n\t\tconsole.log('sss', scale);\n\t\treturn page\n\t\t\t.render({\n\t\t\t\tcanvasContext: canvas.getContext('2d'),\n\t\t\t\tviewport: page.getViewport(scale),\n\t\t\t})\n\t\t\t.promise.then(function () {\n\t\t\t\treturn canvas;\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn err;\n\t\t\t});\n\t} catch (err) {\n\t\treturn err;\n\t}\n}\nmodule.exports = {\n\tdataURLtoFile,\n\tgetExtension,\n\tcreateImage,\n\tcreateCanvas,\n};\n"]},"metadata":{},"sourceType":"script"}