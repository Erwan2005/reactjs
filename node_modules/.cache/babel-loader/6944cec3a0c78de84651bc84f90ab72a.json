{"ast":null,"code":"var _jsxFileName = \"/home/erwan/Documents/Frontend/reactjs/src/components/Profile/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Route, Switch, withRouter, Link } from 'react-router-dom';\nimport { publicRequest, userRequest } from '../../requestMethods';\nimport Info from '../Info';\nimport { useQuery } from \"react-query\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Query(props) {\n  _s();\n\n  return props.children(useQuery(props.keyName, props.fn, props.options));\n}\n\n_s(Query, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\n_c = Query;\nexport class index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getProfile = async () => {\n      let data = await publicRequest.get(`userapp/users/${this.props.match.params.id}`).then(({\n        data\n      }) => data);\n      this.setState({\n        profile: data\n      });\n    };\n\n    this.getFriends = async () => {\n      let data;\n      await publicRequest.get('userapp/users/').then(res => data = res.data);\n      return data;\n    };\n\n    this.getFriend = async () => {\n      let data = await publicRequest.get('userapp/friend/').then(({\n        data\n      }) => data);\n      this.setState({\n        friends: data\n      });\n    };\n\n    this.checkFriend = (userId, friendId) => {\n      if (this.state.friends.filter(item => item.user == userId && item.friend == friendId).length == 0) return false;else return true;\n    };\n\n    this.state = {\n      friends: [],\n      profile: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Query, {\n        keyName: \"users\",\n        fn: () => this.getFriends(),\n        children: ({\n          data,\n          isLoading,\n          error\n        }) => {\n          if (error) return /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 30\n          }, this);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: data.map(user => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 16\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user.currentUser\n});\n\nexport default connect(mapStateToProps, null)(withRouter(index));\n\nvar _c;\n\n$RefreshReg$(_c, \"Query\");","map":{"version":3,"sources":["/home/erwan/Documents/Frontend/reactjs/src/components/Profile/index.jsx"],"names":["React","connect","Route","Switch","withRouter","Link","publicRequest","userRequest","Info","useQuery","Query","props","children","keyName","fn","options","index","Component","constructor","getProfile","data","get","match","params","id","then","setState","profile","getFriends","res","getFriend","friends","checkFriend","userId","friendId","state","filter","item","user","friend","length","render","isLoading","error","map","username","mapStateToProps","currentUser"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from \"react-redux\";\nimport { Route,Switch,withRouter,Link } from 'react-router-dom';\nimport { publicRequest,userRequest } from '../../requestMethods';\nimport Info from '../Info'\nimport { useQuery } from \"react-query\";\nimport './style.css'\n\nfunction Query(props) {\n  return props.children(useQuery(props.keyName, props.fn, props.options));\n}\n\nexport class index extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tfriends: [],\n\t    \tprofile: {},\n\t\t};\n\t}\n\n\tgetProfile = async() =>{\n\t\tlet data = await publicRequest.get(`userapp/users/${this.props.match.params.id}`)\n\t\t.then(({data}) => data)\n\t\tthis.setState({profile: data})\n\t}\n\n\tgetFriends = async() =>{\n\t\tlet data;\n\t\tawait publicRequest.get('userapp/users/').then((res) => (data = res.data))\n\t\treturn data\n\t}\n\tgetFriend = async() =>{\n\t\tlet data = await publicRequest.get('userapp/friend/')\n\t\t.then(({data}) => data)\n\t\tthis.setState({friends: data})\n\t}\n\n\tcheckFriend = (userId,friendId) =>{\n\t    if (this.state.friends.filter(item=> item.user == userId && item.friend == friendId).length == 0)\n\t      return false\n\t    else return true\n\t};\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Query\n\t\t\t\t\tkeyName=\"users\"\n\t\t\t\t\tfn={() => this.getFriends()}\n\t\t\t\t>\n\t\t\t\t\t{({ data, isLoading, error }) => {\n\t          if (error) return <h1>Error</h1>;\n\t          return(\n\t          \t<div>\n\t          \t\t{ data.map(user =>{\n\t          \t\t\treturn (\n\t          \t\t\t\t<li>{user.username}</li>\n\t          \t\t\t)\n\t          \t\t})}\n\t          \t</div>\n\t          )\n\t        }}\n\t\t\t\t</Query>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user.currentUser,\n});\nexport default connect(mapStateToProps,null)(withRouter(index))"]},"metadata":{},"sourceType":"module"}