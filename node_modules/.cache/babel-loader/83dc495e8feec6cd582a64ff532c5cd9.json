{"ast":null,"code":"var _jsxFileName = \"/home/erwan/Documents/Frontend/reactjs/src/components/Create/index.jsx\";\nimport React from 'react';\nimport { withRouter } from \"react-router\";\nimport { Link, Typography, CircularProgress } from '@material-ui/core';\nimport { publicRequest, userRequest } from '../../requestMethods';\nimport FormInput from \"../formInput/FormInput\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        values: { ...this.state.values,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.loginAccount = e => {\n      this.props.history.push(\"/\");\n    };\n\n    this.create = async () => {\n      let data = await publicRequest.post('userapp/users/', {\n        username: this.state.values.username,\n        email: this.state.values.email,\n        birth_date: this.state.values.birthday,\n        password: this.state.values.password\n      }).then(({\n        data\n      }) => data);\n    };\n\n    this.state = {\n      values: {\n        username: \"\",\n        email: \"\",\n        birthday: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      }\n    };\n    this.inputs = [{\n      id: 1,\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Username\",\n      errorMessage: \"Username should be 3-16 characters\",\n      label: \"Username\",\n      pattern: \"^[A-Za-z0-9]{3,16}$\",\n      required: true\n    }, {\n      id: 2,\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      errorMessage: \"It should be a valid email address!\",\n      label: \"Email\",\n      required: true\n    }, {\n      id: 3,\n      name: \"birthday\",\n      type: \"date\",\n      placeholder: \"Birthday\",\n      label: \"Birthday\"\n    }, {\n      id: 4,\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      errorMessage: \"Minimum 8 characters and must contain letters and numbers\",\n      label: \"Password\",\n      pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])[a-zA-Z0-9]{8,40}$`,\n      required: true\n    }, {\n      id: 5,\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      errorMessage: \"Passwords don't match!\",\n      label: \"Confirm Password\",\n      pattern: this.state.values.password,\n      required: true\n    }];\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rights\",\n        children: [this.inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, { ...input,\n          value: this.state.values[input.name],\n          onChange: this.onChange\n        }, input.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-create\",\n          onClick: this.create,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            variant: \"body2\",\n            component: \"button\",\n            className: \"link\",\n            onClick: this.loginAccount,\n            children: \"Already have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nexport default withRouter(index);","map":{"version":3,"sources":["/home/erwan/Documents/Frontend/reactjs/src/components/Create/index.jsx"],"names":["React","withRouter","Link","Typography","CircularProgress","publicRequest","userRequest","FormInput","index","Component","constructor","props","onChange","e","setState","values","state","target","name","value","loginAccount","history","push","create","data","post","username","email","birth_date","birthday","password","then","confirmPassword","inputs","id","type","placeholder","errorMessage","label","pattern","required","render","map","input"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withRouter } from \"react-router\";\nimport { Link,Typography,CircularProgress } from '@material-ui/core';\nimport { publicRequest,userRequest } from '../../requestMethods';\nimport FormInput from \"../formInput/FormInput\";\nimport './style.css'\nexport class index extends React.Component {\n\tconstructor(props){\n      super(props);\n      this.state={\n        values: ({\n          username: \"\",\n          email: \"\",\n          birthday: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n        })\n      };\n\n    this.inputs = [\n          {\n            id: 1,\n            name: \"username\",\n            type: \"text\",\n            placeholder: \"Username\",\n            errorMessage:\n              \"Username should be 3-16 characters\",\n            label: \"Username\",\n            pattern: \"^[A-Za-z0-9]{3,16}$\",\n            required: true,\n          },\n          {\n            id: 2,\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"Email\",\n            errorMessage: \"It should be a valid email address!\",\n            label: \"Email\",\n            required: true,\n          },\n          {\n            id: 3,\n            name: \"birthday\",\n            type: \"date\",\n            placeholder: \"Birthday\",\n            label: \"Birthday\",\n          },\n          {\n            id: 4,\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Password\",\n            errorMessage:\n              \"Minimum 8 characters and must contain letters and numbers\",\n            label: \"Password\",\n            pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])[a-zA-Z0-9]{8,40}$`,\n            required: true,\n          },\n          {\n            id: 5,\n            name: \"confirmPassword\",\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            errorMessage: \"Passwords don't match!\",\n            label: \"Confirm Password\",\n            pattern: this.state.values.password,\n            required: true,\n          },\n        ];\n    };\n\n  \n\t  onChange = (e) => {\n\t    this.setState({ values:{...this.state.values, [e.target.name]: e.target.value }});\n\t    \n\t  };\n\n\t  loginAccount = (e) => {\n\t    this.props.history.push(\"/\");\n\t  };\n\n\t  create = async() =>{\n\t    let data = await publicRequest.post('userapp/users/',{username:this.state.values.username,email:this.state.values.email,birth_date:this.state.values.birthday,password:this.state.values.password})\n\t    .then(({data})=>data)\n\t  };\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"create\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\tleft\n\t\t\t\t</div>\n\t\t\t\t<div className=\"rights\">\n\t\t\t\t\t{this.inputs.map((input) => (\n\t\t              <FormInput\n\t\t                key={input.id}\n\t\t                {...input}\n\t\t                value={this.state.values[input.name]}\n\t\t                onChange={this.onChange}\n\t\t              />\n\t\t            ))}\n\t\t            <button className=\"btn-create\" onClick={this.create}>Create</button>\n\t\t            <div>\n\t\t              <Link variant=\"body2\" component=\"button\" className=\"link\" onClick={this.loginAccount}>\n\t\t                {\"Already have an account?\"}\n\t\t              </Link>\n\t\t            </div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default withRouter(index)"]},"metadata":{},"sourceType":"module"}