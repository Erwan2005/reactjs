{"ast":null,"code":"\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Bj√∂rklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","map":{"version":3,"sources":["/home/erwan/Documents/Frontend/reactjs/node_modules/@videojs/xhr/lib/index.js"],"names":["window","require","_extends","isFunction","createXHR","httpHandler","parseHeaders","headers","result","trim","split","forEach","row","index","indexOf","key","slice","toLowerCase","value","Array","isArray","push","module","exports","default","XMLHttpRequest","noop","XDomainRequest","forEachArray","method","uri","options","callback","initParams","toUpperCase","_createXHR","array","iterator","i","length","isEmpty","obj","hasOwnProperty","params","Error","called","cbOnce","err","response","body","readystatechange","xhr","readyState","setTimeout","loadFunc","getBody","undefined","responseText","getXml","isJson","JSON","parse","e","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","aborted","status","useXDR","url","rawRequest","getAllResponseHeaders","cors","data","sync","json","stringify","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","documentElement","nodeName"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Bj√∂rklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}"]},"metadata":{},"sourceType":"script"}