{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0,\n    total: 0\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      let addedItem = state.products.find(item => item.id === action.payload.id);\n      let existedItem = state.products.find(item => action.payload.id === item.id);\n\n      if (existedItem) {\n        addedItem.quantity += 1;\n        return { ...state,\n          subTotal: state.subTotal + addedItem.price,\n          cartTotal: state.subTotal + addedItem.price\n        };\n      }\n    }\n  }\n});\nexport const {\n  addProduct\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/home/erwan/Documents/Frontend/reactjs/src/context/cartRedux.js"],"names":["createSlice","cartSlice","name","initialState","products","quantity","total","reducers","addProduct","state","action","addedItem","find","item","id","payload","existedItem","subTotal","price","cartTotal","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,QAAQ,EAAE,CAFE;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7B,UAAIC,SAAS,GAAGF,KAAK,CAACL,QAAN,CAAeQ,IAAf,CAAoBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,EAAvD,CAAhB;AACA,UAAIE,WAAW,GAAGP,KAAK,CAACL,QAAN,CAAeQ,IAAf,CAAoBC,IAAI,IAAIH,MAAM,CAACK,OAAP,CAAeD,EAAf,KAAsBD,IAAI,CAACC,EAAvD,CAAlB;;AACA,UAAIE,WAAJ,EAAiB;AACfL,QAAAA,SAAS,CAACN,QAAV,IAAsB,CAAtB;AACA,eAAO,EACL,GAAGI,KADE;AAELQ,UAAAA,QAAQ,EAAER,KAAK,CAACQ,QAAN,GAAiBN,SAAS,CAACO,KAFhC;AAGLC,UAAAA,SAAS,EAAEV,KAAK,CAACQ,QAAN,GAAiBN,SAAS,CAACO;AAHjC,SAAP;AAKD;AACF;AAZO;AAPkB,CAAD,CAA7B;AAuBA,OAAO,MAAM;AAAEV,EAAAA;AAAF,IAAiBP,SAAS,CAACmB,OAAjC;AACP,eAAenB,SAAS,CAACoB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0,\n    total: 0,\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      let addedItem = state.products.find(item => item.id === action.payload.id);\n      let existedItem = state.products.find(item => action.payload.id === item.id);\n      if (existedItem) {\n        addedItem.quantity += 1;\n        return {\n          ...state,\n          subTotal: state.subTotal + addedItem.price,\n          cartTotal: state.subTotal + addedItem.price\n        }\n      }\n    },\n  },\n});\n\nexport const { addProduct } = cartSlice.actions;\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}