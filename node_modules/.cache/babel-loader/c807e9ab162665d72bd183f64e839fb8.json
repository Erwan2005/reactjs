{"ast":null,"code":"var _jsxFileName = \"/home/erwan/Documents/Frontend/reactjs/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Apps from './App';\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport { ReactQueryDevTools } from 'react-query/devtools';\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./context/store\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport \"typeface-roboto\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Router() {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(PersistGate, {\n      loading: null,\n      persistor: persistor,\n      children: /*#__PURE__*/_jsxDEV(Apps, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Router;\nconst client = new QueryClient();\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: client,\n    children: [/*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQueryDevTools, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"sources":["/home/erwan/Documents/Frontend/reactjs/src/index.js"],"names":["React","ReactDOM","reportWebVitals","Apps","QueryClientProvider","QueryClient","ReactQueryDevTools","Provider","store","persistor","PersistGate","Router","client","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,OAAjB;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,aAAjD;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,iBAAjC;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAO,iBAAP;AACA,OAAO,aAAP;;;AAEA,SAASC,MAAT,GAAkB;AAEhB,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAE,IAAtB;AAA4B,MAAA,SAAS,EAAEC,SAAvC;AAAA,6BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAVQE,M;AAYT,MAAMC,MAAM,GAAG,IAAIP,WAAJ,EAAf;AAEAJ,QAAQ,CAACY,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAED,MAA7B;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAOEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPF,E,CASA;AACA;AACA;;AACAb,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Apps from './App';\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport { ReactQueryDevTools } from 'react-query/devtools'\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./context/store\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport \"typeface-roboto\"; \nimport './index.css'\n\nfunction Router() {\n   \n  return(\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Apps />\n      </PersistGate>\n    </Provider>\n  )\n\n}\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={client}>\n      <Router />\n      <ReactQueryDevTools />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}