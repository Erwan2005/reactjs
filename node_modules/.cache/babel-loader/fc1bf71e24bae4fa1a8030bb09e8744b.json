{"ast":null,"code":"export default class APIService {\n  static UpdateArticle(article_id, body, token) {\n    return fetch(`http://127.0.0.1:8000/api/articles/${article_id}/`, {\n      'method': 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static InsertPublication(body, token) {\n    return fetch('http://127.0.0.1:8000/polls/home/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static DeleteArticle(article_id, token) {\n    return fetch(`http://127.0.0.1:8000/api/articles/${article_id}/`, {\n      'method': 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    });\n  }\n\n  static UserProfile(user_id, token) {\n    return fetch(`http://127.0.0.1:8000/polls/profile/${user_id}/`, {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(resp => resp.json()) //.then(resp => setArticles(resp))\n    .catch(error => console.log(error));\n  }\n\n  static LoginUser(body) {\n    return fetch('http://127.0.0.1:8000/userapp/users/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static RegisterUser(body) {\n    return fetch('http://127.0.0.1:8000/userapp/users/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static CheckUser(body, token) {\n    return fetch('http://127.0.0.1:8000/polls/CheckUser/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static GetcheckUser(token) {\n    return fetch('http://127.0.0.1:8000/polls/CheckUser/', {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(resp => resp.json());\n  }\n\n  static UserOffline(user_id, body, token) {\n    return fetch(`http://127.0.0.1:8000/polls/CheckUser/${user_id}/`, {\n      'method': 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static FriendRequest(body, token) {\n    return fetch(`http://127.0.0.1:8000/polls/friendrequest/`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n}","map":{"version":3,"sources":["/home/erwan/Documents/wanjs/src/APIService.js"],"names":["APIService","UpdateArticle","article_id","body","token","fetch","headers","JSON","stringify","then","resp","json","InsertPublication","DeleteArticle","UserProfile","user_id","catch","error","console","log","LoginUser","RegisterUser","CheckUser","GetcheckUser","UserOffline","FriendRequest"],"mappings":"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","sourcesContent":["\n\n\nexport default class APIService {\n    \n    static UpdateArticle(article_id, body, token) {\n\n     return fetch(`http://127.0.0.1:8000/api/articles/${article_id}/`, {\n        'method':'PUT',\n        headers: {\n            'Content-Type':'application/json',\n            'Authorization':`Token ${token}` \n          }, \n          body:JSON.stringify(body)\n\n     }).then(resp => resp.json())\n\n\n    }\n\n    static InsertPublication(body, token) {\n\n      return fetch('http://127.0.0.1:8000/polls/home/', {\n        'method':'POST',\n        headers: {\n            'Content-Type':'application/json',\n            'Authorization':`Token ${token}` \n          }, \n          body:JSON.stringify(body)\n\n      }).then(resp => resp.json())\n\n    }\n\n    static DeleteArticle(article_id, token) {\n\n      return fetch(`http://127.0.0.1:8000/api/articles/${article_id}/`, {\n        'method':'DELETE',\n        headers: {\n            'Content-Type':'application/json',\n            'Authorization':`Token ${token}` \n          }\n\n     })\n\n    }\n\n    static UserProfile(user_id, token) {\n\n      return fetch(`http://127.0.0.1:8000/polls/profile/${user_id}/`, {\n        'method':'GET',\n        headers: {\n            'Content-Type':'application/json',\n            'Authorization':`Token ${token}` \n          }\n\n     })\n      .then(resp => resp.json())\n      //.then(resp => setArticles(resp))\n      .catch(error => console.log(error))\n    }\n\n    static LoginUser(body) {\n\n      return fetch('http://127.0.0.1:8000/userapp/users/', {\n        'method':'POST',\n        headers: {\n            'Content-Type':'application/json',\n            \n          }, \n          body:JSON.stringify(body)\n\n      }).then(resp => resp.json())\n\n    }\n\n\n    static RegisterUser(body) {\n\n      return fetch('http://127.0.0.1:8000/userapp/users/', {\n        'method':'POST',\n        headers: {\n            'Content-Type':'application/json',\n          }, \n          body:JSON.stringify(body)\n\n      }).then(resp => resp.json())\n\n    }\n\n    static CheckUser(body, token) {\n\n      return fetch('http://127.0.0.1:8000/polls/CheckUser/', {\n        'method':'POST',\n        headers: {\n            'Content-Type':'application/json',\n            'Authorization':`Token ${token}` \n          }, \n          body:JSON.stringify(body)\n\n      }).then(resp => resp.json())\n\n    }\n\n    static GetcheckUser(token) {\n\n      return fetch('http://127.0.0.1:8000/polls/CheckUser/', {\n        'method':'GET',\n        headers: {\n            'Content-Type':'application/json',\n            'Authorization':`Token ${token}` \n          }, \n\n      }).then(resp => resp.json())\n\n    }\n\n    static UserOffline(user_id, body, token) {\n\n      return fetch(`http://127.0.0.1:8000/polls/CheckUser/${user_id}/`, {\n        'method':'PUT',\n        headers: {\n            'Content-Type':'application/json',\n            'Authorization':`Token ${token}` \n          }, \n          body:JSON.stringify(body)\n\n      }).then(resp => resp.json())\n\n    }\n\n    static FriendRequest(body, token) {\n\n      return fetch(`http://127.0.0.1:8000/polls/friendrequest/`, {\n        'method':'POST',\n        headers: {\n            'Content-Type':'application/json',\n            'Authorization':`Token ${token}` \n          }, \n          body:JSON.stringify(body)\n\n      }).then(resp => resp.json())\n\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}